{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Subtask A: Entity and Relationship Extraction\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "#pip install transformers\n",
    "#pip install spacy\n",
    "#pip install nltk\n",
    "#pip install torch\n",
    "#pip install requests beautifulsoup4\n",
    "#pip install yahooquery"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "!python -m spacy download en_core_web_sm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import sqlite3\n",
    "from transformers import AutoTokenizer, AutoModelForTokenClassification, pipeline\n",
    "import spacy \n",
    "import nltk\n",
    "import requests \n",
    "import torch\n",
    "import pandas as pd\n",
    "from bs4 import BeautifulSoup\n",
    "pd.set_option(\"display.max_rows\", 200)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "dbpath = 'data/ecmdatabase.db'\n",
    "con = sqlite3.connect(f\"file:{dbpath}?mode=ro\", uri=True)\n",
    "with con:\n",
    "    result = con.execute(\"SELECT * from companies WHERE stock_symbol = 'TSLA';\")\n",
    "    records = result.fetchall()\n",
    "    company_name = records[0][1]\n",
    "    tsla_item1 = records[0][2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\" ITEM 1. BUSINESS \\n\\nOverview \\n\\nWe design, develop, manufacture, sell and lease high-performance fully electric vehicles and energy generation and storage systems, and offer services related to our products. We generally sell our products directly to customers, and continue to grow our customer-facing infrastructure through a global network of vehicle showrooms and service centers, Mobile Service, body shops, Supercharger stations and Destination Chargers to accelerate the widespread adoption of our products. We emphasize performance, attractive styling and the safety of our users and workforce in the design and manufacture of our products and are continuing to develop full self-driving technology for improved safety. We also strive to lower the cost of ownership for our customers through continuous efforts to reduce manufacturing costs and by offering financial and other services tailored to our products. \\n\\nOur mission is to accelerate the world&#8217;s transition to sustainable energy. We believe that this mission, along with our engineering expertise, vertically integrated business model and focus on user experience differentiate us from other companies. \\n\\nSegment Information \\n\\nWe operate as two reportable segments: (i) automotive and (ii) energy generation and storage. \\n\\nThe automotive segment includes the design, development, manufacturing, sales and leasing of high-performance fully electric vehicles as well as sales of automotive regulatory credits. Additionally, the automotive segment also includes services and other, which includes sales of used vehicles, non-warranty after-sales vehicle services, body shop and parts, paid Supercharging, vehicle insurance revenue and retail merchandise. The energy generation and storage segment includes the design, manufacture, installation, sales and leasing of solar energy generation and energy storage products and related services and sales of solar energy systems incentives. \\n\\nOur Products and Services \\n\\nAutomotive \\n\\nWe currently manufacture five different consumer vehicles &#8211; the Model 3, Y, S, X and Cybertruck. Model 3 is a four-door mid-size sedan that we designed for manufacturability with a base price for mass-market appeal. Model Y is a compact sport utility vehicle (&#8220;SUV&#8221;) built on the Model 3 platform with seating for up to seven adults. Model S is a four-door full-size sedan and Model X is a mid-size SUV with seating for up to seven adults. Model S and Model X feature the highest performance characteristics and longest ranges that we offer in a sedan and SUV, respectively. In November 2023, we entered the consumer pickup truck market with first deliveries of the Cybertruck, a full-size electric pickup truck with a stainless steel exterior that has the utility and strength of a truck while featuring the speed of a sports car. \\n\\nIn 2022, we also began early production and deliveries of a commercial electric vehicle, the Tesla Semi. We have planned electric vehicles to address additional vehicle markets, and to continue leveraging developments in our proprietary Full Self-Driving (&#8220;FSD&#8221;) Capability features, battery cell and other technologies. \\n\\nEnergy Generation and Storage \\n\\nEnergy Storage Products \\n\\nPowerwall and Megapack are our lithium-ion battery energy storage products. Powerwall, which we sell directly to customers, as well as through channel partners, is designed to store energy at a home or small commercial facility. Megapack is an energy storage solution for commercial, industrial, utility and energy generation customers, multiple of which may be grouped together to form larger installations of gigawatt hours (&#8220;GWh&#8221;) or greater capacity. \\n\\nWe also continue to develop software capabilities for remotely controlling and dispatching our energy storage systems across a wide range of markets and applications, including through our real-time energy control and optimization platforms. \\n\\nSolar Energy Offerings \\n\\nWe sell retrofit solar energy systems to customers and channel partners and also make them available through power purchase agreement (&#8220;PPA&#8221;) arrangements. We purchase most of the components for our retrofit solar energy systems from multiple sources to ensure competitive pricing and adequate supply. We also design and manufacture certain components for our solar energy products. \\n\\nWe sell our Solar Roof, which combines premium glass roof tiles with energy generation, directly to customers, as well as through channel customers. We continue to improve our installation capability and efficiency, including through collaboration with real estate developers and builders on new homes. \\n\\nTechnology \\n\\nAutomotive \\n\\nBattery and Powertrain \\n\\nOur core vehicle technology competencies include powertrain engineering and manufacturing and our ability to design vehicles that utilize the unique advantages of an electric powertrain. We have designed our proprietary powertrain systems to be adaptable, efficient, reliable and cost-effective while withstanding the rigors of an automotive environment. We offer dual motor powertrain vehicles, which use two electric motors to maximize traction and performance in an all-wheel drive configuration, as well as vehicle powertrain technology featuring three electric motors for further increased performance in certain versions of Model S and Model X, Cybertruck and the Tesla Semi. \\n\\nWe maintain extensive testing and R&#38;D capabilities for battery cells, packs and systems, and have built an expansive body of knowledge on lithium-ion cell chemistry types and performance characteristics. In order to enable a greater supply of cells for our products with higher energy density at lower costs, we have developed a new proprietary lithium-ion battery cell and improved manufacturing processes. \\n\\nVehicle Control and Infotainment Software \\n\\nThe performance and safety systems of our vehicles and their battery packs utilize sophisticated control software. Control systems in our vehicles optimize performance, customize vehicle behavior, manage charging and control all infotainment functions. We develop almost all of this software, including most of the user interfaces, internally and update our vehicles&#8217; software regularly through over-the-air updates. \\n\\nSelf-Driving Development and Artificial Intelligence \\n\\nWe have expertise in developing technologies, systems and software to enable self-driving vehicles using primarily vision-based technologies. Our FSD Computer runs our neural networks in our vehicles, and we are also developing additional computer hardware to better enable the massive amounts of field data captured by our vehicles to continually train and improve these neural networks for real-world performance. \\n\\nCurrently, we offer in our vehicles certain advanced driver assist systems under our Autopilot and FSD Capability options. Although at present the driver is ultimately responsible for controlling the vehicle, our systems provide safety and convenience functionality that relieves drivers of the most tedious and potentially dangerous aspects of road travel much like the system that airplane pilots use, when conditions permit. As with other vehicle systems, we improve these functions in our vehicles over time through over-the-air updates. \\n\\nWe intend to establish in the future an autonomous Tesla ride-hailing network, which we expect would also allow us to access a new customer base even as modes of transportation evolve. \\n\\nWe are also applying our artificial intelligence learnings from self-driving technology to the field of robotics, such as through Optimus, a robotic humanoid in development, which is controlled by the same AI system. \\n\\nEnergy Generation and Storage \\n\\nEnergy Storage Products \\n\\nWe leverage many of the component-level technologies from our vehicles in our energy storage products. By taking a modular approach to the design of battery systems, we can optimize manufacturing capacity of our energy storage products. Additionally, our expertise in power electronics enables our battery systems to interconnect with electricity grids while providing fast-acting systems for power injection and absorption. We have also developed software to remotely control and dispatch our energy storage systems. \\n\\nSolar Energy Systems \\n\\nWe have engineered Solar Roof over numerous iterations to combine aesthetic appeal and durability with power generation. The efficiency of our solar energy products is aided by our own solar inverter, which incorporates our power electronics technologies. We designed both products to integrate with Powerwall. \\n\\nDesign and Engineering \\n\\nAutomotive \\n\\nWe have established significant in-house capabilities in the design and test engineering of electric vehicles and their components and systems. Our team has significant experience in computer-aided design as well as durability, strength and crash test simulations, which reduces the product development time of new models. We have also achieved complex engineering feats in stamping, casting and thermal systems, and developed a method to integrate batteries directly with vehicle body structures without separate battery packs to optimize manufacturability, weight, range and cost characteristics. \\n\\nWe are also expanding our manufacturing operations globally while taking action to localize our vehicle designs and production for particular markets, including country-specific market demands and factory optimizations for local workforces. As we increase our capabilities, particularly in the areas of automation, die-making and line-building, we are also making strides in the simulations modeling these capabilities prior to construction. \\n\\nEnergy Generation and Storage \\n\\nOur expertise in electrical, mechanical, civil and software engineering allows us to design, engineer, manufacture and install energy generating and storage products and components, including at the residential through utility scale. For example, the modular design of our Megapack utility-scale battery line is intended to significantly reduce the amount of assembly required in the field. We also customize solutions including our energy storage products, solar energy systems and/or Solar Roof for customers to meet their specific needs. \\n\\nSales and Marketing \\n\\nHistorically, we have been able to achieve sales without traditional advertising and at relatively low marketing costs. We continue to monitor our public narrative and brand, and tailor our marketing efforts accordingly, including through investments in customer education and advertising as necessary. \\n\\nAutomotive \\n\\nDirect Sales \\n\\nOur vehicle sales channels currently include our website and an international network of company-owned stores. In some jurisdictions, we also have galleries to educate and inform customers about our products, but such locations do not transact in the sale of vehicles. We believe this infrastructure enables us to better control costs of inventory, manage warranty service and pricing, educate consumers about electric vehicles, make our vehicles more affordable, maintain and strengthen the Tesla brand and obtain rapid customer feedback. \\n\\nWe reevaluate our sales strategy both globally and at a location-by-location level from time to time to optimize our sales channels. However, sales of vehicles in the automobile industry tend to be cyclical in many markets, which may expose us to volatility from time to time. \\n\\nUsed Vehicle Sales \\n\\nOur used vehicle business supports new vehicle sales by integrating the trade-in of a customer&#8217;s existing Tesla or non-Tesla vehicle with the sale of a new or used Tesla vehicle. The Tesla and non-Tesla vehicles we acquire as trade-ins are subsequently remarketed, either directly by us or through third parties. We also remarket used Tesla vehicles acquired from other sources including lease returns. \\n\\nPublic Charging \\n\\nWe have a growing global network of Tesla Superchargers, which are our industrial-grade, high-speed vehicle chargers. Where possible, we co-locate Superchargers with our solar and energy storage systems to reduce costs and promote renewable power. Supercharger stations are typically placed along well-traveled routes and in and around dense city centers to allow vehicle owners the ability to enjoy quick, reliable charging along an extensive network with convenient stops. Use of the Supercharger network either requires payment of a fee or is free under certain sales programs. In November 2021, we began to offer Supercharger access to non-Tesla vehicles in certain locations in support of our mission to accelerate the world&#8217;s transition to sustainable energy, and in November 2022, we opened up our previously proprietary charging connector as the North American Charging Standard (NACS). This enables all electric vehicles and charging stations to interoperate &#8212; which makes charging easier and more efficient for everyone and advances our mission to accelerate the world&#8217;s transition to sustainable energy. Following this, a number of major automotive companies announced their adoption of NACS, with their access to the Supercharger network beginning in phases in 2024 and their production of NACS vehicles beginning no later than 2025. We also engaged SAE International to govern NACS as an industry standard, now named J3400. We continue to monitor and increase our network of Tesla Superchargers in anticipation of future demand. \\n\\nWe also work with a wide variety of hospitality, retail and public destinations, as well as businesses with commuting employees, to offer additional charging options for our customers, as well as single-family homeowners and multi-family residential entities, to deploy home charging solutions. \\n\\nIn-App Upgrades \\n\\nAs our vehicles are capable of being updated remotely over-the-air, our customers may purchase additional paid options and features through the Tesla app or through the in-vehicle user interface. We expect that this functionality will also allow us to offer certain options and features on a subscription basis in the future. \\n\\nEnergy Generation and Storage \\n\\nWe market and sell our solar and energy storage products to residential, commercial and industrial customers and utilities through a variety of channels, including through our website, stores and galleries, as well as through our network of channel partners, and in the case of some commercial customers, through PPA transactions. We emphasize simplicity, standardization and accessibility to make it easy and cost-effective for customers to adopt clean energy, while reducing our customer acquisition costs. \\n\\nService and Warranty \\n\\nAutomotive \\n\\nService \\n\\nWe provide service for our electric vehicles at our company-owned service locations and through Tesla Mobile Service technicians who perform work remotely at customers&#8217; homes or other locations. Servicing the vehicles ourselves allows us to identify problems and implement solutions and improvements faster than traditional automobile manufacturers and their dealer networks. The connectivity of our vehicles also allows us to diagnose and remedy many problems remotely and proactively. \\n\\nVehicle Limited Warranties and Extended Service Plans \\n\\nWe provide a manufacturer&#8217;s limited warranty on all new and used Tesla vehicles we sell directly to consumers, which may include limited warranties on certain components, specific types of damage or battery capacity retention. We also currently offer optional extended service plans that provide coverage beyond the new vehicle limited warranties for certain models in specified regions. \\n\\nEnergy Generation and Storage \\n\\nWe provide service and repairs to our energy product customers, including under warranty where applicable. We generally provide manufacturer&#8217;s limited warranties with our energy storage products and offer certain extended limited warranties that are available at the time of purchase of the system. If we install a system, we also provide certain limited warranties on our installation workmanship. \\n\\nFor retrofit solar energy systems, we provide separate limited warranties for workmanship and against roof leaks, and for Solar Roof, we also provide limited warranties for defects and weatherization. For components not manufactured by us, we generally pass-through the applicable manufacturers&#8217; warranties. \\n\\nAs part of our solar energy system and energy storage contracts, we may provide the customer with performance guarantees that commit that the underlying system will meet or exceed the minimum energy generation or performance requirements specified in the contract. \\n\\nFinancial Services \\n\\nAutomotive \\n\\nPurchase Financing and Leases \\n\\nWe offer leasing and/or loan financing arrangements for our vehicles in certain jurisdictions in North America, Europe and Asia ourselves and through various financial institutions. Under certain of such programs, we have provided resale value guarantees or buyback guarantees that may obligate us to cover a resale loss up to a certain limit or repurchase the subject vehicles at pre-determined values. \\n\\nInsurance \\n\\nIn 2021, we launched our insurance product using real-time driving behavior in select states, which offers rates that are often better than other alternatives and promotes safer driving. Our insurance products are currently available in 12 states and we plan to expand the markets in which we offer insurance products, as part of our ongoing effort to decrease the total cost of ownership for our customers. \\n\\nEnergy Generation and Storage \\n\\nWe offer certain financing options to our solar customers, which enable the customer to purchase and own a solar energy system, Solar Roof or integrated solar and Powerwall system. Our solar PPAs, offered primarily to commercial customers, charge a fee per kilowatt-hour based on the amount of electricity produced by our solar energy systems. \\n\\nManufacturing \\n\\nWe currently have manufacturing facilities in the U.S. in Northern California, in Buffalo, New York, Gigafactory New York; in Austin, Texas, Gigafactory Texas and near Reno, Nevada, Gigafactory Nevada. At these facilities, we manufacture and assemble, among other things, vehicles, certain vehicle parts and components, such as our battery packs and battery cells, energy storage components and solar products and components. \\n\\nInternationally, we also have manufacturing facilities in China (Gigafactory Shanghai) and Germany (Gigafactory Berlin-Brandenburg), which allows us to increase the affordability of our vehicles for customers in local markets by reducing transportation and manufacturing costs and eliminating the impact of unfavorable tariffs. In March 2023, we announced the location of our next Gigafactory in Monterrey, Mexico. Generally, we continue to expand production capacity at our existing facilities. We also intend to further increase cost-competitiveness in our significant markets by strategically adding local manufacturing. \\n\\nSupply Chain \\n\\nOur products use thousands of parts that are sourced from hundreds of suppliers across the world. We have developed close relationships with vendors of key parts such as battery cells, electronics and complex vehicle assemblies. Certain components purchased from these suppliers are shared or are similar across many product lines, allowing us to take advantage of pricing efficiencies from economies of scale. \\n\\nAs is the case for some automotive companies, some of our procured components and systems are sourced from single suppliers. Where multiple sources are available for certain key components, we work to qualify multiple suppliers for them where it is sensible to do so in order to minimize potential production risks due to disruptions in their supply. We also mitigate risk by maintaining safety stock for key parts and assemblies and die banks for components with lengthy procurement lead times. \\n\\nOur products use various raw materials including aluminum, steel, cobalt, lithium, nickel and copper. Pricing for these materials is governed by market conditions and may fluctuate due to various factors outside of our control, such as supply and demand and market speculation. We strive to execute long-term supply contracts for such materials at competitive pricing when feasible, and we currently believe that we have adequate access to raw materials supplies to meet the needs of our operations. \\n\\nGovernmental Programs, Incentives and Regulations \\n\\nGlobally, the ownership of our products by our customers is impacted by various government credits, incentives, and policies. Our business and products are also subject to numerous governmental regulations that vary among jurisdictions. \\n\\nThe operation of our business is also impacted by various government programs, incentives, and other arrangements. See Note 2, Summary of Significant Accounting Policies , to the consolidated financial statements included elsewhere in this Annual Report on Form 10-K for further details. \\n\\nPrograms and Incentives \\n\\nInflation Reduction Act \\n\\nOn August 16, 2022, the Inflation Reduction Act of 2022 (&#8220;IRA&#8221;) was enacted into law and is effective for taxable years beginning after December 31, 2022, and remains subject to future guidance releases. The IRA includes multiple incentives to promote clean energy, electric vehicles, battery and energy storage manufacture or purchase, including through providing tax credits to consumers. For example, qualifying Tesla customers may receive up to $7,500 in federal tax credits for the purchase of qualified electric vehicles in the U.S. through 2032. \\n\\nAutomotive Regulatory Credits \\n\\nWe earn tradable credits in the operation of our business under various regulations related to zero-emission vehicles (&#8220;ZEVs&#8221;), greenhouse gas, fuel economy and clean fuel. We sell these credits to other regulated entities who can use the credits to comply with emission standards and other regulatory requirements. Sales of these credits are recognized within automotive regulatory credits revenue in our consolidated statements of operations included elsewhere in this Annual Report on Form 10-K. \\n\\nEnergy Storage System Incentives and Policies \\n\\nWhile the regulatory regime for energy storage projects is still under development, there are various policies, incentives and financial mechanisms at the federal, state and local levels that support the adoption of energy storage. \\n\\nFor example, energy storage systems that are charged using solar energy may be eligible for the solar energy-related U.S. federal tax credits described below. The Federal Energy Regulatory Commission (&#8220;FERC&#8221;) has also taken steps to enable the participation of energy storage in wholesale energy markets. In addition, California and a number of other states have adopted procurement targets for energy storage, and behind-the-meter energy storage systems qualify for funding under the California Self Generation Incentive Program. Our customers primarily benefit directly under these programs. In certain instances our customers may transfer such credits to us as contract consideration. In such transactions, they are included as a component of energy generation and storage revenues in our consolidated statements of operations included elsewhere in this Annual Report on Form 10-K. \\n\\nPursuant to the IRA, under Sections 48, 48E and 25D of the Internal Revenue Code (&#8221;IRC&#8221;), standalone energy storage technology is eligible for a tax credit between 6% and 50% of qualified expenditures, regardless of the source of energy, which may be claimed by our customers for storage systems they purchase or by us for arrangements where we own the systems. These tax credits are primarily for the benefit of our customers and are currently scheduled to phase-out starting in 2032 or later. \\n\\nSolar Energy System Incentives and Policies \\n\\nU.S. federal, state and local governments have established various policies, incentives and financial mechanisms to reduce the cost of solar energy and to accelerate the adoption of solar energy. These incentives include tax credits, cash grants, tax abatements and rebates. \\n\\nIn particular, pursuant to the IRA, Sections 48, 48E and 25D of the IRC provides a tax credit between 6% and 70% of qualified commercial or residential expenditures for solar energy systems, which may be claimed by our customers for systems they purchase, or by us for arrangements where we own the systems for properties that meet statutory requirements. These tax credits are primarily for the direct benefit of our customers and are currently scheduled to phase-out starting in 2032 or later. \\n\\nRegulations \\n\\nVehicle Safety and Testing \\n\\nIn the U.S., our vehicles are subject to regulation by the National Highway Traffic Safety Administration (&#8220;NHTSA&#8221;), including all applicable Federal Motor Vehicle Safety Standards (&#8220;FMVSS&#8221;) and the NHTSA bumper standard. Numerous FMVSS apply to our vehicles, such as crash-worthiness and occupant protection requirements. Our current vehicles fully comply and we expect that our vehicles in the future will fully comply with all applicable FMVSS with limited or no exemptions, however, FMVSS are subject to change from time to time. As a manufacturer, we must self-certify that our vehicles meet all applicable FMVSS and the NHTSA bumper standard, or otherwise are exempt, before the vehicles may be imported or sold in the U.S. \\n\\nWe are also required to comply with other federal laws administered by NHTSA, including the Corporate Average Fuel Economy standards, Theft Prevention Act requirements, labeling requirements and other information provided to customers in writing, Early Warning Reporting requirements regarding warranty claims, field reports, death and injury reports and foreign recalls, a Standing General Order requiring reports regarding crashes involving vehicles equipped with advanced driver assistance systems, and additional requirements for cooperating with compliance and safety investigations and recall reporting. The U.S. Automobile Information and Disclosure Act also requires manufacturers of motor vehicles to disclose certain information regarding the manufacturer&#8217;s suggested retail price, optional equipment and pricing. In addition, federal law requires inclusion of fuel economy ratings, as determined by the U.S. Department of Transportation and the Environmental Protection Agency (the &#8220;EPA&#8221;), and New Car Assessment Program ratings as determined by NHTSA, if available. \\n\\nOur vehicles sold outside of the U.S. are subject to similar foreign compliance, safety, environmental and other regulations. Many of those regulations are different from those applicable in the U.S. and may require redesign and/or retesting. Some of those regulations impact or prevent the rollout of new vehicle features. \\n\\nSelf-Driving Vehicles \\n\\nGenerally, laws pertaining to self-driving vehicles are evolving globally, and in some cases may create restrictions on features or vehicle designs that we develop. While there are currently no federal U.S. regulations pertaining specifically to self-driving vehicles or self-driving equipment, NHTSA has published recommended guidelines on self-driving vehicles, apart from the FMVSS and manufacturer reporting obligations, and retains the authority to investigate and/or take action on the safety or compliance of any vehicle, equipment or features operating on public roads. Certain U.S. states also have legal restrictions on the operation, registration or licensure of self-driving vehicles, and many other states are considering them. This regulatory patchwork increases the legal complexity with respect to self-driving vehicles in the U.S. \\n\\nIn markets that follow the regulations of the United Nations Economic Commission for Europe (&#8220; ECE markets &#8221;), some requirements restrict the design of advanced driver-assistance or self-driving features, which can compromise or prevent their use entirely. Other applicable laws, both current and proposed, may hinder the path and timeline to introducing self-driving vehicles for sale and use in the markets where they apply. \\n\\nOther key markets, including China, continue to consider self-driving regulation. Any implemented regulations may differ materially from the U.S. and ECE markets, which may further increase the legal complexity of self-driving vehicles and limit or prevent certain features. \\n\\nAutomobile Manufacturer and Dealer Regulation \\n\\nIn the U.S., state laws regulate the manufacture, distribution, sale and service of automobiles, and generally require motor vehicle manufacturers and dealers to be licensed in order to sell vehicles directly to residents. Certain states have asserted that the laws in such states do not permit automobile manufacturers to be licensed as dealers or to act in the capacity of a dealer, or that they otherwise restrict a manufacturer&#8217;s ability to deliver or perform warranty repairs on vehicles. To sell vehicles to residents of states where we are not licensed as a dealer, we generally conduct the sale out of the state. In certain such states, we have opened &#8220;galleries&#8221; that serve an educational purpose and where sales may not occur. \\n\\nSome automobile dealer trade associations have both challenged the legality of our operations in court and used administrative and legislative processes to attempt to prohibit or limit our ability to operate existing stores or expand to new locations. Certain dealer associations have also actively lobbied state licensing agencies and legislators to interpret existing laws or enact new laws in ways not favorable to our ownership and operation of our own retail and service locations. We expect such challenges to continue, and we intend to actively fight any such efforts. \\n\\nBattery Safety and Testing \\n\\nOur battery packs are subject to various U.S. and international regulations that govern transport of &#8220;dangerous goods,&#8221; defined to include lithium-ion batteries, which may present a risk in transportation. We conduct testing to demonstrate our compliance with such regulations. \\n\\nWe use lithium-ion cells in our high voltage battery packs in our vehicles and energy storage products. The use, storage and disposal of our battery packs are regulated under existing laws and are the subject of ongoing regulatory changes that may add additional requirements in the future. We have agreements with third party battery recycling companies to recycle our battery packs, and we are also piloting our own recycling technology. \\n\\nSolar Energy&#8212;General \\n\\nWe are subject to certain state and federal regulations applicable to solar and battery storage providers and sellers of electricity. To operate our systems, we enter into standard interconnection agreements with applicable utilities. Sales of electricity and non-sale equipment leases by third parties, such as our leases and PPAs, have faced regulatory challenges in some states and jurisdictions. \\n\\nSolar Energy&#8212;Net Metering \\n\\nMost states in the U.S. make net energy metering, or net metering, available to solar customers. Net metering typically allows solar customers to interconnect their solar energy systems to the utility grid and offset their utility electricity purchases by receiving a bill credit for excess energy generated by their solar energy system that is exported to the grid. In certain jurisdictions, regulators or utilities have reduced or eliminated the benefit available under net metering or have proposed to do so. \\n\\nCompetition \\n\\nAutomotive \\n\\nThe worldwide automotive market is highly competitive and we expect it will become even more competitive in the future as a significant and growing number of established and new automobile manufacturers, as well as other companies, have entered, or are reported to have plans to enter the electric vehicle market. \\n\\nWe believe that our vehicles compete in the market based on both their traditional segment classification as well as their propulsion technology. For example, Cybertruck competes with other pickup trucks, Model S and Model X compete primarily with premium sedans and premium SUVs and Model 3 and Model Y compete with small to medium-sized sedans and compact SUVs, which are extremely competitive markets. Competing products typically include internal combustion vehicles from more established automobile manufacturers; however, many established and new automobile manufacturers have entered or have announced plans to enter the market for electric and other alternative fuel vehicles. Overall, we believe these announcements and vehicle introductions, including the introduction of electric vehicles into rental car company fleets, promote the development of the electric vehicle market by highlighting the attractiveness of electric vehicles relative to the internal combustion vehicle. Many major automobile manufacturers have electric vehicles available today in major markets including the U.S., China and Europe, and other current and prospective automobile manufacturers are also developing electric vehicles. In addition, several manufacturers offer hybrid vehicles, including plug-in versions. \\n\\nWe believe that there is also increasing competition for our vehicle offerings as a platform for delivering self-driving technologies, charging solutions and other features and services, and we expect to compete in this developing market through continued progress on our Autopilot, FSD and neural network capabilities, Supercharger network and our infotainment offerings. \\n\\nEnergy Generation and Storage \\n\\nEnergy Storage Systems \\n\\nThe market for energy storage products is also highly competitive, and both established and emerging companies have introduced products that are similar to our product portfolio or that are alternatives to the elements of our systems. We compete with these companies based on price, energy density and efficiency. We believe that the specifications and features of our products, our strong brand and the modular, scalable nature of our energy storage products give us a competitive advantage in our markets. \\n\\nSolar Energy Systems \\n\\nThe primary competitors to our solar energy business are the traditional local utility companies that supply energy to our potential customers. We compete with these traditional utility companies primarily based on price and the ease by which customers can switch to electricity generated by our solar energy systems. We also compete with solar energy companies that provide products and services similar to ours. Many solar energy companies only install solar energy systems, while others only provide financing for these installations. We believe we have a significant expansion opportunity with our offerings and that the regulatory environment is increasingly conducive to the adoption of renewable energy systems. \\n\\nIntellectual Property \\n\\nWe place a strong emphasis on our innovative approach and proprietary designs which bring intrinsic value and uniqueness to our product portfolio. As part of our business, we seek to protect the underlying intellectual property rights of these innovations and designs such as with respect to patents, trademarks, copyrights, trade secrets, confidential information and other measures, including through employee and third-party nondisclosure agreements and other contractual arrangements. For example, we place a high priority on obtaining patents to provide the broadest and strongest possible protection to enable our freedom to operate our innovations and designs across all of our products and technologies as well as to protect and defend our product portfolio. We have also adopted a patent policy in which we irrevocably pledged that we will not initiate a lawsuit against any party for infringing our patents through activity relating to electric vehicles or related equipment for so long as such party is acting in good faith. We made this pledge in order to encourage the advancement of a common, rapidly-evolving platform for electric vehicles, thereby benefiting ourselves, other companies making electric vehicles and the world. \\n\\nEnvironmental, Social and Governance (ESG) and Human Capital Resources \\n\\nESG \\n\\nThe very purpose of Tesla's existence is to accelerate the world's transition to sustainable energy. We believe the world cannot reduce carbon emissions without addressing both energy generation and consumption, and we are designing and manufacturing a complete energy and transportation ecosystem to achieve this goal. As we expand, we are building each new factory to be more efficient and sustainably designed than the previous one, including with respect to per-unit waste reduction and resource consumption, including water and energy usage. We are focused on further enhancing sustainability of operations outside of our direct control, including reducing the carbon footprint of our supply chain. \\n\\nWe are committed to sourcing only responsibly produced materials, and our suppliers are required to provide evidence of management systems that ensure social, environmental and sustainability best practices in their own operations, as well as to demonstrate a commitment to responsible sourcing into their supply chains. We have a zero-tolerance policy when it comes to child or forced labor and human trafficking by our suppliers and we look to the Organization for Economic Co-operation and Development Due Diligence Guidelines to inform our process and use feedback from our internal and external stakeholders to find ways to continually improve. We are also driving safety in our own factories by focusing on worker engagement. Our incidents per vehicle continue to drop even as our production volumes increase. We also strive to be an employer of choice by offering compelling, impactful jobs with best in-industry benefits. \\n\\nWe believe that sound corporate governance is critical to helping us achieve our goals, including with respect to ESG. We continue to evolve a governance framework that exercises appropriate oversight of responsibilities at all levels throughout the company and manages its affairs consistent with high principles of business ethics. Our ESG Sustainability Council is made up of leaders from across our company, and regularly presents to our Board of Directors, which oversees our ESG impacts, initiatives and priorities. \\n\\nHuman Capital Resources \\n\\nA competitive edge for Tesla is its ability to attract and retain high quality employees. During the past year, Tesla made substantial investments in its workforce, further strengthening its standing as one of the most desirable and innovative companies to work for. As of December 31, 2023, our employee headcount worldwide was 140,473. \\n\\nWe have created an environment that fosters growth opportunities, and as of this report, nearly two-thirds (65%) of our managers were promoted from an internal, non-manager position, and 43% of our management employees have been with Tesla for more than five years. Tesla&#8217;s growth of 35% over the past two years has offered internal career development to our employees as well as the ability to make a meaningful contribution to a sustainable future. \\n\\nWe are able to retain our employees, in part, not only because employees can enjoy ownership in Tesla through stock (of which 89% have been given the opportunity to), but because we also provide them with excellent health benefits such as free counseling, paid parental leave, paid time off and zero-premium medical plan options that are made available on the first day of employment. \\n\\nWe recognize the positive impact that leaders can have on their teams and offer fundamental skills training and continuous development to all leaders through various programs globally. \\n\\nWe don&#8217;t stop there. Tesla has several other programs strategically designed to increase paths for greater career opportunity such as: \\n\\n&#8226; Technician Trainee (Service) &#8211; &#8239; The Tesla Technician Trainee Program provides on-the-job automotive maintenance training at Tesla, resulting in an industry certification. Targeted at individuals with limited experience, whether in industry or vocational schools, the program prepares trainees for employment as technicians. In 2023, we hired over 1,900 Technician Trainees across the U.S., Germany and China. \\n\\n&#8226; START (Manufacturing and Service) &#8211; Tesla START is an intensive training program that complements the Technician Trainee program and equips individuals with the skills needed for a successful technician role at Tesla. We have partnered with colleges and technical academies to launch Tesla START in the U.S., United Kingdom and Germany. In 2023, we hired over 350 trainees for manufacturing and service roles through this program, providing an opportunity to transition into full-time employment . \\n\\n&#8226; Internships &#8211; Annually, Tesla hires over 6,000 university and college students from around the world. We recruit from diverse student organizations and campuses, seeking top talent passionate about our mission. Our interns engage in meaningful work from day one, and we often offer them full-time positions post-internship. \\n\\n&#8226; Military Fellowship and Transition Programs &#8211; &#8239;The Military Fellowship and Transition Programs are designed to offer exiting military service members in the U.S. and Europe with career guidance on transitioning into the civil workforce. We partner with the career transition services of European Defence Ministries across five countries, as well as the U.S. Chamber of Commerce&#8217;s Hire our Heroes. These programs aim to convert high-performing individuals to full-time roles and create a veteran talent pipeline. \\n\\n&#8226; Apprenticeships &#8211; Tesla Apprenticeships are offered globally, providing academic and on-the-job training to prepare specialists in skilled trades. Apprentices will complete between one to four years of on-the-job training. Apprentice programs have seen skilled trade hires across the U.S., Australia, Hong Kong, Korea and Germany. \\n\\n&#8226; Manufacturing Development Program &#8211;&#8239;Tesla's manufacturing pathway program is designed to provide graduating high school seniors with the financial resources, coursework and experience they need to start a successful manufacturing career at Tesla. We hired 373 graduates through this program in 2023, and our goal in 2024 is grow this program to over 600 students annually across our Fremont Factory, Gigafactory Nevada, Gigafactory Texas and Gigafactory New York. \\n\\n&#8226; Engineering Development Program &#8211;&#8239;Launched in January 2024, this program targets recent college and university graduates for specialized engineering fields. In collaboration with Austin Community College, the program educates early-career engineers in controls engineering, enhancing their knowledge of high-demand technologies for U.S. manufacturing. \\n\\nWe will continue to expand the opportunities for our employees to add skills and develop professionally with a new Employee Educational Assistance Program launching in the U.S. in the spring of 2024 to help employees pursue select certificates or degrees. With virtual, self-paced education options available, employees can pursue a new path or expand their knowledge while continuing to grow their career. \\n\\nAt Tesla, our employees show up passionate about making a difference in the world and for each other. We remain unwavering in our demand that our factories, offices, stores and service centers are places where our employees feel respected and appreciated. Our policies are designed to promote fairness and respect for everyone. We hire, evaluate and promote employees based on their skills and performance. Everyone is expected to be trustworthy, demonstrate excellence in their performance and collaborate with others. With this in mind, we will not tolerate certain behaviors. These include harassment, retaliation, violence, intimidation and discrimination of any kind on the basis of race, color, religion, national origin, gender, sexual orientation, gender identity, gender expression, age, disability or veteran status. \\n\\nAnti-harassment training is conducted on day one of new hire orientation for all employees and reoccurring for leaders. In addition, we run various leadership development programs throughout the year aimed at enhancing leaders&#8217; skills, and in particular, helping them to understand how to appropriately respond to and address employee concerns. \\n\\nEmployees are encouraged to speak up both in regard to misconduct and safety concerns and can do so by contacting the integrity line, submitting concerns through our Take Charge process, or notifying their Human Resource Partner or any member of management. Concerns are reviewed in accordance with established protocols by investigators with expertise, who also review for trends and outcomes for remediation and appropriate controls. Responding to questions timely is key so Human Resource Partners for each functional area are visible throughout facilities and are actively involved in driving culture and engagement alongside business leaders. \\n\\nAvailable Information \\n\\nWe file or furnish periodic reports and amendments thereto, including our Annual Reports on Form 10-K, our Quarterly Reports on Form 10-Q and Current Reports on Form 8-K, proxy statements and other information with the SEC. In addition, the SEC maintains a website ( www.sec.gov ) that contains reports, proxy and information statements, and other information regarding issuers that file electronically. Our website is located at www.tesla.com , and our reports, amendments thereto, proxy statements and other information are also made available, free of charge, on our investor relations website at ir.tesla.com as soon as reasonably practicable after we electronically file or furnish such information with the SEC. The information posted on our website is not incorporated by reference into this Annual Report on Form 10-K. \\n\\n\""
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tsla_item1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "tsla_item1 = tsla_item1.replace('\\n', '')\n",
    "tsla_item1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data Exploration - Text Analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Frequency Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "## FREQUENCY ANALYSIS\n",
    "from collections import Counter\n",
    "# load spacy model\n",
    "nlp = spacy.load('en_core_web_sm')\n",
    "nlp.disable_pipe(\"parser\")\n",
    "nlp.enable_pipe(\"senter\")\n",
    "# load data\n",
    "doc = nlp(tsla_item1)\n",
    "words = [token.text for token in doc if not token.is_stop and not token.is_punct]\n",
    "\n",
    "print(Counter(words).most_common(20))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### TF-IDF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import nltk\n",
    "import spacy\n",
    "import pandas as pd\n",
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "from gensim import corpora\n",
    "from gensim.models import LdaModel\n",
    "from collections import Counter\n",
    "\n",
    "# Load spaCy model\n",
    "nlp = spacy.load('en_core_web_sm')\n",
    "\n",
    "# Step 1: Load and preprocess the text\n",
    "text_data = [tsla_item1]\n",
    "\n",
    "# Tokenization using nltk\n",
    "nltk.download('punkt')\n",
    "nltk.download('stopwords')\n",
    "from nltk.corpus import stopwords\n",
    "from nltk.tokenize import word_tokenize\n",
    "\n",
    "stop_words = set(stopwords.words('english'))\n",
    "\n",
    "def preprocess(text):\n",
    "    # Tokenization and lowercasing\n",
    "    tokens = word_tokenize(text.lower())\n",
    "    # Remove stopwords and non-alphabetic characters\n",
    "    tokens = [word for word in tokens if word.isalpha() and word not in stop_words]\n",
    "    return ' '.join(tokens)\n",
    "\n",
    "# Preprocess the data\n",
    "processed_text = [preprocess(text) for text in text_data]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# TF-IDF Vectorization\n",
    "tfidf_vectorizer = TfidfVectorizer(max_features=10)  # Limit to top 10 features for brevity\n",
    "tfidf_matrix = tfidf_vectorizer.fit_transform(processed_text)\n",
    "tfidf_keywords = tfidf_vectorizer.get_feature_names_out()\n",
    "\n",
    "print(\"Top TF-IDF Keywords:\")\n",
    "print(tfidf_keywords)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### LDA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Prepare data for LDA\n",
    "tokenized_texts = [preprocess(text).split() for text in text_data]\n",
    "dictionary = corpora.Dictionary(tokenized_texts)\n",
    "corpus = [dictionary.doc2bow(text) for text in tokenized_texts]\n",
    "\n",
    "# Train LDA model\n",
    "lda_model = LdaModel(corpus, num_topics=2, id2word=dictionary, passes=15)\n",
    "\n",
    "# Display topics\n",
    "print(\"LDA Topics:\")\n",
    "for idx, topic in lda_model.print_topics(-1):\n",
    "    print(f\"Topic {idx}: {topic}\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Pos tagging"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# POS Tagging using spaCy\n",
    "doc = nlp(tsla_item1)\n",
    "\n",
    "# Extract POS tags\n",
    "pos_tags = [(token.text, token.pos_) for token in doc]\n",
    "\n",
    "print(\"Part-of-Speech Tags:\")\n",
    "print(pos_tags)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Named Entity Recognition"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### NLTK"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "## using nltk\n",
    "'''\n",
    "nltk.download('punkt')\n",
    "nltk.download('punkt_tab')\n",
    "nltk.download('averaged_perceptron_tagger_eng')\n",
    "nltk.download('maxent_ne_chunker_tab')\n",
    "nltk.download('words')\n",
    "''' \n",
    "# Step Two: Load Data\n",
    "print(len(tsla_item1))\n",
    "\n",
    "# Step Three: Tokenise, find parts of speech and chunk words \n",
    "nltk_name=[]\n",
    "nltk_label=[]\n",
    "for sent in nltk.sent_tokenize(tsla_item1):\n",
    "  for chunk in nltk.ne_chunk(nltk.pos_tag(nltk.word_tokenize(sent))):\n",
    "     if hasattr(chunk, 'label'):\n",
    "      entity_name = ' '.join(c[0] for c in chunk)\n",
    "      entity_label = chunk.label()\n",
    "      nltk_name.append(entity_name)\n",
    "      nltk_label.append(entity_label)\n",
    "      print(entity_label, entity_name)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Spacy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "## Using spacy\n",
    "\n",
    "# load spacy model\n",
    "nlp = spacy.load('en_core_web_sm')\n",
    "nlp.disable_pipe(\"parser\")\n",
    "nlp.enable_pipe(\"senter\")\n",
    "# load data\n",
    "doc = nlp(tsla_item1)\n",
    "Spacy_name=[]\n",
    "Spacy_label=[]\n",
    "# collect unique labels\n",
    "unique_labels = {}\n",
    "for ent in doc.ents:\n",
    "    if ent.label_ not in unique_labels.keys():\n",
    "        unique_labels[ent.label_] = []\n",
    "    unique_labels[ent.label_].append((ent.text, ent.start_char, ent.end_char))\n",
    "    Spacy_name.append(ent.text)\n",
    "    Spacy_label.append(ent.label_)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- PERSON:      People, including fictional.\n",
    "- NORP:        Nationalities or religious or political groups.\n",
    "- FAC:         Buildings, airports, highways, bridges, etc.\n",
    "- ORG:         Companies, agencies, institutions, etc.\n",
    "- GPE:         Countries, cities, states.\n",
    "- LOC:         Non-GPE locations, mountain ranges, bodies of water.\n",
    "- PRODUCT:     Objects, vehicles, foods, etc. (Not services.)\n",
    "- EVENT:       Named hurricanes, battles, wars, sports events, etc.\n",
    "- WORK_OF_ART: Titles of books, songs, etc.\n",
    "- LAW:         Named documents made into laws.\n",
    "- LANGUAGE:    Any named language.\n",
    "- DATE:        Absolute or relative dates or periods.\n",
    "- TIME:        Times smaller than a day.\n",
    "- PERCENT:     Percentage, including ”%“.\n",
    "- MONEY:       Monetary values, including unit.\n",
    "- QUANTITY:    Measurements, as of weight or distance.\n",
    "- ORDINAL:     “first”, “second”, etc.\n",
    "- CARDINAL:    Numerals that do not fall under another type."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "unique_labels.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "unique_labels['ORG']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "unique_labels['PRODUCT'] #products"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "unique_labels['LOC'] # locations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "unique_labels['FAC'] # facilities / factories"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "unique_labels['EVENT'] # events"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "from spacy import displacy\n",
    "#displacy.render(doc, style=\"ent\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Hugging Face Transformers"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Because entities can be of different types and not all are equally important in the\n",
    "context of the natural language text being analyzed, it is quite common for NER\n",
    "processors to return the following in addition to a list of entities:\n",
    "\n",
    " **type**\n",
    "- Is it a person? Is it a location? Is it an organization? The set of categories will\n",
    "depend on the specific model used. \n",
    "- The bert-base-NER distinguishes four types\n",
    "of entities: location (LOC), organization (ORG), person (PER), and miscellaneous\n",
    "(MISC).\n",
    " \n",
    "**salience**\n",
    "- The relative importance in the text analyzed or, in other words, the entity’s\n",
    "relevance. \n",
    "- Is the entity central to the text (higher score/salience), or is it just\n",
    "mentioned tangentially (lower score/salience)?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "## Using transformers\n",
    "tokenizer = AutoTokenizer.from_pretrained(\"dslim/bert-base-NER\")\n",
    "model = AutoModelForTokenClassification.from_pretrained(\"dslim/bert-base-NER\")\n",
    "ner_pipe = pipeline(\"ner\", model = model, tokenizer = tokenizer)\n",
    "for ent in ner_pipe(tsla_item1):\n",
    "    print(ent)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Diffbot API\n",
    "https://www.diffbot.com/\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "from getpass import getpass\n",
    "\n",
    "TOKEN = getpass('Enter token: ')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "FIELDS = \"entities,facts\"\n",
    "HOST = \"nl.diffbot.com\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "import json\n",
    "\n",
    "def get_request(payload):\n",
    "  res = requests.post(\"https://{}/v1/?fields={}&token={}\".format(HOST, FIELDS, TOKEN), json=payload)\n",
    "  ret = None\n",
    "  try:\n",
    "    ret = res.json()\n",
    "  except:\n",
    "    print(\"Bad response: \" + res.text)\n",
    "    print(res.status_code)\n",
    "    print(res.headers)\n",
    "  return ret"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "res = get_request({\n",
    "    \"content\": tsla_item1,\n",
    "    \"lang\": \"en\",\n",
    "    \"format\": \"plain text with title\",\n",
    "})\n",
    "\n",
    "print (res)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### View Entities and Entity Types"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "for ent in res[\"entities\"]:\n",
    "    if ent[\"salience\"] > 0.5:\n",
    "        print(\"Entity Name: \" + ent['name'])\n",
    "        print(\"Salience: \" + str(ent['salience']))\n",
    "        print(\"Entity Types:\")\n",
    "        print([ent_type[\"name\"] for ent_type in ent['allTypes']])\n",
    "        print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if \"facts\" in res:\n",
    "    df = pd.DataFrame.from_dict(res[\"facts\"])\n",
    "    pd.options.display.max_columns = None\n",
    "    pd.set_option('display.width', 1000)\n",
    "    print(df.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Supplementary Source: Wikipedia Article"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "tesla_wiki = \"Tesla, Inc. (/ˈtɛslə/ TESS-lə or /ˈtɛzlə/ TEZ-lə[a]) is an American multinational automotive and clean energy company. Headquartered in Austin, Texas, it designs, manufactures and sells battery electric vehicles (BEVs), stationary battery energy storage devices from home to grid-scale, solar panels and solar shingles, and related products and services. \\\n",
    "    Tesla was incorporated in July 2003 by Martin Eberhard and Marc Tarpenning as Tesla Motors. Its name is a tribute to inventor and electrical engineer Nikola Tesla. In February 2004, Elon Musk joined as Tesla's largest shareholder; in 2008, he was named chief executive officer. In 2008, the company began production of its first car model, the Roadster sports car, followed by the Model S sedan in 2012, the Model X SUV in 2015, the Model 3 sedan in 2017, the Model Y crossover in 2020, the Tesla Semi truck in 2022 and the Cybertruck pickup truck in 2023. The Model 3 is the all-time best-selling plug-in electric car worldwide, and in June 2021 became the first electric car to sell 1 million units globally.[6] In 2023, the Model Y was the best-selling vehicle, of any kind, globally.[7][8][3] \\\n",
    "        Tesla is one of the world's most valuable companies in terms of market capitalization. In October 2021, Tesla temporarily became a trillion-dollar company, the seventh U.S. company to do so. In 2023, the company led the battery electric vehicle market, with 19.9% share. Also in 2023, the company was ranked 69th in the Forbes Global 2000.[9] As of March 2024, it is the world's most valuable automaker. Tesla has been the subject of lawsuits, government scrutiny, and journalistic criticism, stemming from allegations of multiple cases of whistleblower retaliation, worker rights violations such as sexual harassment and anti-union activities, safety defects leadings to dozens of recalls, the lack of a public relations department, and controversial statements from Musk including overpromising on the company's driving assist technology and product release timelines.\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "res = get_request({\n",
    "    \"content\": tesla_wiki,\n",
    "    \"lang\": \"en\",\n",
    "    \"format\": \"plain text with title\",\n",
    "})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "extract_entities(res)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if \"facts\" in res:\n",
    "    df = pd.DataFrame.from_dict(res[\"facts\"])\n",
    "    pd.options.display.max_columns = None\n",
    "    pd.set_option('display.width', 3000)\n",
    "    print(df.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Creating a Entity-Relationship Extraction Pipeline for Wikipedia Articles"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found Company: American Electric Power Company, Inc.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "'American Electric Power Company, Inc.'"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from yahooquery import Ticker\n",
    "\n",
    "def get_company_name(ticker):\n",
    "    try:\n",
    "        ticker_info = Ticker(ticker)\n",
    "        company_name = ticker_info.quote_type[ticker]['longName']\n",
    "        print(f\"Found Company: {company_name}\")\n",
    "        return company_name\n",
    "    except Exception as e:\n",
    "        print(f\"Error fetching company name for ticker {ticker}: {e}\")\n",
    "        return ticker\n",
    "\n",
    "get_company_name(\"AEP\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "from bs4 import BeautifulSoup\n",
    "\n",
    "def get_wikipedia_article(company_name_or_ticker):\n",
    "    search_url = f\"https://en.wikipedia.org/wiki/{company_name_or_ticker}\"\n",
    "    \n",
    "    try:\n",
    "        response = requests.get(search_url)\n",
    "        response.raise_for_status()\n",
    "\n",
    "        soup = BeautifulSoup(response.text, 'html.parser')\n",
    "\n",
    "        title = soup.find('h1', {'id': 'firstHeading'}).text\n",
    "\n",
    "        content_div = soup.find('div', {'id': 'mw-content-text'})\n",
    "\n",
    "        paragraphs = content_div.find_all('p')\n",
    "\n",
    "        full_article_text = '\\n\\n'.join([p.text.strip() for p in paragraphs if p.text.strip()])\n",
    "\n",
    "        #print(f\"Title: {title}\")\n",
    "        #print(f\"Full Article:\\n{full_article_text}\")\n",
    "        return f\"{title}\" + \" \" + f\"{full_article_text}\"\n",
    "\n",
    "    except requests.exceptions.RequestException as e:\n",
    "        print(f\"Error fetching the Wikipedia article: {e}\")\n",
    "\n",
    "# company_name_or_ticker = input(\"Enter the company name or ticker code: \").replace(' ', '_')\n",
    "# get_wikipedia_article(company_name_or_ticker)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def wikipedia_ner_rel_pipeline(ticker):\n",
    "    company_name = get_company_name(ticker)\n",
    "    article = get_wikipedia_article(company_name)\n",
    "    res = get_request({\n",
    "    \"content\": article,\n",
    "    \"lang\": \"en\",\n",
    "    \"format\": \"plain text with title\",\n",
    "    })\n",
    "    ents, rels = None, None\n",
    "    if \"entities\" in res:\n",
    "        ents = pd.DataFrame.from_dict(res[\"entities\"])\n",
    "    if \"facts\" in res:\n",
    "        rels = pd.DataFrame.from_dict(res[\"facts\"])\n",
    "    pd.options.display.max_columns = None\n",
    "    pd.set_option('display.width', 3000)\n",
    "    \n",
    "    return (ents, rels)\n",
    "\n",
    "    \n",
    "\n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found Company: American Electric Power Company, Inc.\n"
     ]
    },
    {
     "ename": "NameError",
     "evalue": "name 'HOST' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[8], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m ents_rels \u001b[38;5;241m=\u001b[39m \u001b[43mwikipedia_ner_rel_pipeline\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mAEP\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n",
      "Cell \u001b[1;32mIn[5], line 4\u001b[0m, in \u001b[0;36mwikipedia_ner_rel_pipeline\u001b[1;34m(ticker)\u001b[0m\n\u001b[0;32m      2\u001b[0m company_name \u001b[38;5;241m=\u001b[39m get_company_name(ticker)\n\u001b[0;32m      3\u001b[0m article \u001b[38;5;241m=\u001b[39m get_wikipedia_article(company_name)\n\u001b[1;32m----> 4\u001b[0m res \u001b[38;5;241m=\u001b[39m \u001b[43mget_request\u001b[49m\u001b[43m(\u001b[49m\u001b[43m{\u001b[49m\n\u001b[0;32m      5\u001b[0m \u001b[43m\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mcontent\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43marticle\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m      6\u001b[0m \u001b[43m\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mlang\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43men\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[0;32m      7\u001b[0m \u001b[43m\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mformat\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mplain text with title\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[0;32m      8\u001b[0m \u001b[43m\u001b[49m\u001b[43m}\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m      9\u001b[0m ents, rels \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m, \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m     10\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mentities\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01min\u001b[39;00m res:\n",
      "Cell \u001b[1;32mIn[7], line 4\u001b[0m, in \u001b[0;36mget_request\u001b[1;34m(payload)\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mget_request\u001b[39m(payload):\n\u001b[1;32m----> 4\u001b[0m   res \u001b[38;5;241m=\u001b[39m requests\u001b[38;5;241m.\u001b[39mpost(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhttps://\u001b[39m\u001b[38;5;132;01m{}\u001b[39;00m\u001b[38;5;124m/v1/?fields=\u001b[39m\u001b[38;5;132;01m{}\u001b[39;00m\u001b[38;5;124m&token=\u001b[39m\u001b[38;5;132;01m{}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;241m.\u001b[39mformat(\u001b[43mHOST\u001b[49m, FIELDS, TOKEN), json\u001b[38;5;241m=\u001b[39mpayload)\n\u001b[0;32m      5\u001b[0m   ret \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m      6\u001b[0m   \u001b[38;5;28;01mtry\u001b[39;00m:\n",
      "\u001b[1;31mNameError\u001b[0m: name 'HOST' is not defined"
     ]
    }
   ],
   "source": [
    "ents_rels = wikipedia_ner_rel_pipeline(\"AEP\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(ents_rels[0])\n",
    "print(ents_rels[1])\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Create JSON Node and Relationship Objects"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import spacy\n",
    "from collections import defaultdict\n",
    "from nltk.corpus import wordnet\n",
    "import re\n",
    "\n",
    "json_nodes = {\"nodes\": defaultdict(set)}\n",
    "json_rels = {\"edges\" : []}\n",
    "\n",
    "def extract_entities(res):\n",
    "    for ent in res[\"entities\"]:\n",
    "        if ent[\"salience\"] > 0.7:\n",
    "            print(\"Entity Name: \" + ent['name'])\n",
    "            print(\"Entity Types:\")\n",
    "            print([ent_type[\"name\"] for ent_type in ent['allTypes']])\n",
    "            print()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Spacy Node and Relationship Objects"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "# Load spaCy English language model\n",
    "nlp = spacy.load(\"en_core_web_sm\")\n",
    "\n",
    "doc = nlp(tsla_item1)\n",
    "\n",
    "# Extract entities and relations\n",
    "nodes = defaultdict(set)  # Use a set to avoid duplicates\n",
    "edges = []\n",
    "\n",
    "# Define a function to identify non-company keywords\n",
    "def is_non_company(entity_text):\n",
    "    # Keywords or patterns that indicate the entity is not a company\n",
    "    non_company_keywords = [\n",
    "        'program', 'act', 'regulation', 'department', 'agency', 'council',\n",
    "        'commission', 'service', 'policy', 'initiative', 'standard', \n",
    "        'incentive', 'college', 'school', 'university', 'authority', 'board',\n",
    "        'order', 'capital', 'vehicle', 'development', 'internship', 'apprenticeship',\n",
    "        'system', 'training', 'product', 'directive', 'committee', 'resource',\n",
    "        'partnership', 'technology', 'platform'\n",
    "    ]\n",
    "    \n",
    "    # If the entity contains any of these keywords, it is not a company\n",
    "    return any(re.search(r'\\b' + keyword + r'\\b', entity_text.lower()) for keyword in non_company_keywords)\n",
    "\n",
    "# Improved function to categorize and extract entities\n",
    "def categorize_entities(entity):\n",
    "    if entity.label_ == 'ORG':\n",
    "        # Check if it's not a company\n",
    "        if is_non_company(entity.text):\n",
    "            return  # Exclude if it's not a company\n",
    "        nodes['Company'].add(entity.text)\n",
    "    elif entity.label_ == 'PRODUCT':\n",
    "        nodes['Product'].add(entity.text)\n",
    "    elif entity.label_ == 'GPE':\n",
    "        nodes['Country'].add(entity.text)\n",
    "    elif entity.label_ in ['NORP', 'INDUSTRY']:\n",
    "        nodes['Industry'].add(entity.text)\n",
    "\n",
    "# Extract named entities\n",
    "for ent in doc.ents:\n",
    "    categorize_entities(ent)\n",
    "\n",
    "# Synonyms to match different verbs for edge detection\n",
    "target_phrases = {\n",
    "    'SUPPLIES': [\"provide products\", \"manufactures products\", \"delivers goods\", \"offers items\", \"distributes products\"],\n",
    "    'LOCATED_IN': [\"headquartered in\", \"based in\", \"located in\", \"situated in\"],\n",
    "    'RIVALS_WITH': [\"competes with\", \"is a competitor of\", \"challenges\", \"rivals\"],\n",
    "    'ALLIES_WITH': [\"partners with\", \"collaborates with\", \"is allied with\", \"cooperates with\"]\n",
    "}\n",
    "\n",
    "# Extract relationships using semantic similarity\n",
    "for sent in doc.sents:\n",
    "    sent_vector = sent.vector  # Get the vector of the current sentence\n",
    "    for relationship, phrases in target_phrases.items():\n",
    "        for phrase in phrases:\n",
    "            phrase_vector = nlp(phrase).vector  # Get the vector for the target phrase\n",
    "            similarity = sent.similarity(nlp(phrase))  # Compute similarity\n",
    "            if similarity > 0.7:  # Threshold for determining a match\n",
    "                # Check if entities in the sentence can be matched to the known nodes\n",
    "                for entity in sent.ents:\n",
    "                    if entity.label_ == \"ORG\" and entity.text in nodes[\"Company\"]:\n",
    "                        target_entity = None\n",
    "                        if relationship == \"SUPPLIES\":\n",
    "                            target_entity = [ent.text for ent in sent.ents if ent.label_ == \"PRODUCT\"]\n",
    "                        elif relationship == \"LOCATED_IN\":\n",
    "                            target_entity = [ent.text for ent in sent.ents if ent.label_ == \"GPE\"]\n",
    "                        elif relationship in [\"RIVALS_WITH\", \"ALLIES_WITH\"]:\n",
    "                            target_entity = [ent.text for ent in sent.ents if ent.label_ == \"ORG\" and ent.text != entity.text]\n",
    "                        \n",
    "                        if target_entity:\n",
    "                            for target in target_entity:\n",
    "                                edges.append((entity.text, relationship, target))\n",
    "\n",
    "\n",
    "\n",
    "# Convert nodes to list to remove duplicates and maintain order\n",
    "nodes = {k: list(v) for k, v in nodes.items()}\n",
    "\n",
    "# Output nodes and edges\n",
    "print(\"Nodes:\")\n",
    "for node_type, node_list in nodes.items():\n",
    "    print(f\"{node_type}: {node_list}\")\n",
    "\n",
    "print(\"\\nEdges:\")\n",
    "for edge in edges:\n",
    "    print(f\"{edge[0]} -[{edge[1]}]-> {edge[2]}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for ent in doc.ents:\n",
    "    print(ent.text, ent.label_)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## NER model evaluation\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def count(name, label):\n",
    "    name_counts = {}\n",
    "    for n, l in zip(name, label):\n",
    "        if n in name_counts:\n",
    "            name_counts[n] += 1\n",
    "        else:\n",
    "            name_counts[n] = 1\n",
    "    return name_counts\n",
    "\n",
    "def transfer_dic(name, label):\n",
    "    name_label_counts = {}\n",
    "    for n, l in zip(name, label):\n",
    "        key = (n, l) \n",
    "        if key in name_label_counts:\n",
    "            name_label_counts[key] += 1\n",
    "        else:\n",
    "            name_label_counts[key] = 1\n",
    "    return name_label_counts\n",
    "\n",
    "# output first the total appearing counts and the respective counts of each label\n",
    "def check_name(name, label, target_name):\n",
    "    if target_name not in name:\n",
    "        return \"no target_name\"\n",
    "    name_counts=count(name, label)\n",
    "    name_label_counts=transfer_dic(name, label)\n",
    "    print(\"total counts \"+ str(name_counts[target_name]))\n",
    "    for i in name_label_counts:\n",
    "        if i[0]==target_name:\n",
    "            print((i[1],name_label_counts[i]))\n",
    "\n",
    "# output a dictionary containg the key of name and the label with highest appearing ratio. {name:(label,ratio)}\n",
    "def get_NER(name, label):\n",
    "    res={}\n",
    "    name_counts=count(name, label)\n",
    "    name_label_counts=transfer_dic(name, label)\n",
    "    for i in list(set(name)):\n",
    "        for j in name_label_counts:\n",
    "            if j[0]==i:\n",
    "                ratio=name_label_counts[j]/name_counts[i]\n",
    "                if j[0] in res:\n",
    "                    if ratio>res[j[0]][1]:\n",
    "                        res[j[0]]=(j[1],ratio)\n",
    "                else:\n",
    "                    res[j[0]]=(j[1],ratio)\n",
    "    return res\n",
    "\n",
    "def highest_label(name, label):\n",
    "    res={}\n",
    "    NER=get_NER(name, label)\n",
    "    for i in NER:\n",
    "        if NER[i][0] in res:\n",
    "            res[NER[i][0]].append(i)\n",
    "        else:\n",
    "            res[NER[i][0]]=[i,]\n",
    "    return res\n",
    "\n",
    "\n",
    "\n",
    "print(get_NER(Spacy_name,Spacy_label))\n",
    "print(get_NER(nltk_name,nltk_label))\n",
    "\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": ".venv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
